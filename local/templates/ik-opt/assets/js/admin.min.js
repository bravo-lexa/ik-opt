'use strict';

var jsCore = {
    init: function init() {},
    json_to_array: function json_to_array(data) {
        data = $.parseJSON(data);
        data = $.makeArray(data);
        data = data[0];
        return data;
    },
    arElements: function arElements($dataCode) {
        return $('[' + $dataCode + ']');
    }
};
var jsFormAdminValid = {
    // * Елементы
    $arElements: [],

    init: function init() {
        this.load();
    },
    load: function load() {
        // * Загружаем все переменные
        this.$arElements = $('[data-js-form-admin-valid]');

        this.$arElements.each(function () {
            // * Данные с формы
            var $this = $(this),
                $name = $this.data('js-form-admin-valid'),
                $button = $this.find('button[name=formButton]');

            // * Записываем все в DATA
            $this.data({
                name: $name,
                button: $button
            });
        });
        // Обновляем
        this.update();
    },
    update: function update() {
        this.$arElements.each(function () {
            var $this = $(this);
            // * Кнопка отправки
            // * console.log($this.find('button[name=formButton]'));
            $this.data('button').on('click', function (e) {
                e.preventDefault();

                // * При нажатии ничего не происходит, только отравка
                jsFormAdminValid.click($this);
            });
        });
    },
    // Нажатие на кнопку
    click: function click($this) {
        // Узнаем Код элемента
        jsFormAdminValid.code($this);
    },
    // * Переводи значение Названия в код
    code: function code($this) {
        var $name = $this.find('[name=name]'),
            $code = $this.find('[name=code]');

        // * Если Имя не пустое и код пустой
        // * То заполнить код автоматически
        if ($name.val() !== "" & $code.val() === "") {
            $.post("/admin/ajax/admin_form_code/", {
                value: $name.val()
            }, function (data) {
                $code.val(data);
                jsFormAdminValid.ajax($this);
            });
        } else {
            jsFormAdminValid.ajax($this);
        }
    },

    // * Получаем значение
    ajax: function ajax($this) {
        // * Создаем экземпляр, тут будем хранить всю информацию для отправки
        var formData = new FormData();
        // * Переберам все data переменные
        // * Для отправки
        $.each($this.data(), function (key, value) {
            formData.append(key, value);
        });

        // * Присоединяем все файлы
        if ($this.find('[type=file]').is('input')) {
            // Если нашки хоть один
            $.each($('[type=file]'), function (key, file) {
                formData.append($(file).attr('name'), $(file)[0].files[0]);
            });
        }

        // * Перебираем все поля
        $this.find('input, textarea, select').each(function () {
            formData.append(this.name, $(this).val());

            if ($($this).is('[type=file]')) {
                formData.append(this.name, $(this).attr('value'));
            }
            if ($(this).is('[type=checkbox]')) {
                formData.append(this.name, $(this).is(':checked'));
            }
        });

        $.ajax({
            url: '/admin/ajax/admin_form_valid/',
            type: 'post',
            data: formData,
            processData: false,
            contentType: false,
            success: function success(data) {
                // $('.container-main-content').html(data);

                data = $.parseJSON(data);
                data = $.makeArray(data);
                data = data[0];

                if (data['result'] == 'success') {
                    jsFormAdminValid.valid($this, data);
                    $this.submit();
                } else {
                    jsFormAdminValid.valid($this, data);
                }
            }
        });
    },

    // Проверяем все поля
    valid: function valid($this, data) {
        // console.log(data);

        $.each(data['fields'], function (key, value) {
            var $input = $this.find('[name=' + key + ']');

            if (value) {
                $input.addClass('is-invalid');

                if ($input.siblings('.invalid-feedback').length === 0) {
                    $input.after('<div class="invalid-feedback">' + value['text'] + '</div>');
                } else {
                    $input.siblings('.invalid-feedback').html(value['text']);
                }
            } else {
                $input.removeClass('is-invalid').siblings('.invalid-feedback').remove();
            }
        });
        // Удалить все, если все удачно
        if (data['result'] == 'success') {
            var $input = $this.find('[name]');
            $input.removeClass('is-invalid').siblings('.invalid-feedback').remove();
        }
    }
};
var jsFormAdminImgDelete = {
    // * Елементы
    $arElements: [],

    init: function init() {
        this.load();
    },
    load: function load() {
        // * Загружаем все переменные
        this.$arElements = $('[data-js-form-admin-img-delete]');

        this.$arElements.each(function () {
            // * Данные с формы
            var $this = $(this),
                $id = $this.data('js-form-admin-img-delete'),
                $element_id = $this.data('element-id'),
                $field = $this.data('field'),
                $class = $this.data('class');

            // * Записываем все в DATA
            $this.data({
                id: $id,
                element_id: $element_id,
                field: $field,
                class: $class
            });
        });
        // Обновляем
        this.update();
    },
    update: function update() {
        this.$arElements.each(function () {
            var $this = $(this);
            // * Кнопка отправки
            // * console.log($this.find('button[name=formButton]'));
            $this.on('click', function (e) {
                e.preventDefault();

                // * При нажатии ничего не происходит, только отравка
                jsFormAdminImgDelete.click($this);
            });
        });
    },
    // Нажатие на кнопку
    click: function click($this) {
        // Узнаем Код элемента
        jsFormAdminImgDelete.delete($this);
    },
    // * Переводи значение Названия в код
    delete: function _delete($this) {
        $.post("/admin/ajax/admin_form_img_delete/", {
            file_id: $this.data('id'),
            element_id: $this.data('element_id'),
            field: $this.data('field')
        }, function (data) {
            data = jsCore.json_to_array(data);
            console.log(data);

            if (data['result'] == 'success') {
                console.log($this);
                $this.attr('style', '');
                $this.removeClass('is-delete');
                $this.addClass('is-upload');

                $('.' + $this.data('class')).remove();
            } else {}
        });
    }
};
var jsBtnHidden = {
    // * Елементы
    $arElements: [],

    init: function init() {
        this.load();
    },
    load: function load() {
        // * Загружаем все переменные
        this.$arElements = $('[data-js-btn-hidden]');

        this.$arElements.each(function () {
            // * Данные с формы
            var $this = $(this),
                $class = $this.data('js-btn-hidden'),
                $text_1 = $this.text(),
                $text_2 = $this.data('text');

            // * Записываем все в DATA
            $this.data({
                class: $class,
                text_1: $text_1,
                text_2: $text_2
            });
        });
        // Обновляем
        this.update();
    },
    update: function update() {
        this.$arElements.each(function () {
            var $this = $(this);
            // * Кнопка отправки
            // * console.log($this.find('button[name=formButton]'));
            $this.on('click', function (e) {
                e.preventDefault();

                // * При нажатии ничего не происходит, только отравка
                jsBtnHidden.click($this);
            });
        });
    },
    // Нажатие на кнопку
    click: function click($this) {
        var $element = $('.' + $this.data('class'));

        if ($element.hasClass('is-hidden')) {
            if ($this.find('span')) {
                $this.find('span').text($this.data('text_2'));
            } else {
                $this.text($this.data('text_2'));
            }
            $this.addClass('is-on');

            $element.removeClass('is-hidden');
            $element.children().removeClass('is-hidden');
        } else {
            if ($this.find('span')) {
                $this.find('span').text($this.data('text_1'));
            } else {
                $this.text($this.data('text_1'));
            }
            $this.removeClass('is-on');

            $element.addClass('is-hidden');
            $element.children().addClass('is-hidden');
        }
    }
};
var jsFormAdminSelectStatus = {
    $arElements: [],
    $dataCode: 'data-js-form-select-status',

    init: function init() {
        this.$arElements = jsCore.arElements(this.$dataCode);
        this.$arElements.each(function () {
            var $this = $(this);
            $this.on('change', function () {
                // * Запуск функции
                jsFormAdminSelectStatus.click($this);
            });
        });
    },
    // * Нажатие на кнопку
    click: function click($this) {
        if ($this.val() == 0) {
            $this.addClass('is-status-0');
        } else {
            $this.removeClass('is-status-0');
        }
        if ($this.val() == 1) {
            $this.addClass('is-status-1');
        } else {
            $this.removeClass('is-status-1');
        }
        if ($this.val() == 2) {
            $this.addClass('is-status-2');
        } else {
            $this.removeClass('is-status-2');
        }
        if ($this.val() == 3) {
            $this.addClass('is-status-3');
        } else {
            $this.removeClass('is-status-3');
        }
    }
};

// * * * * * * Запуск
$(function () {
    jsCore.init();
    jsFormAdminValid.init();
    jsFormAdminImgDelete.init();
    jsFormAdminSelectStatus.init();
    jsBtnHidden.init();
});
